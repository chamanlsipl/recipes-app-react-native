{"ast":null,"code":"var _jsxFileName = \"D:\\\\ChamanLal08011\\\\LogicSoft\\\\PATH-FCI-Traceability\\\\Sample_Monitoring_System\\\\SampleMonitoringSystem\\\\src\\\\screens\\\\IngredientsDetails\\\\IngredientsDetailsScreen.js\";\nimport React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\nexport default function IngredientsDetailsScreen(props) {\n  var _route$params,\n    _this = this;\n  var navigation = props.navigation,\n    route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.ingredients;\n  var ingredientsArray = getAllIngredients(item);\n  useLayoutEffect(function () {\n    var _route$params2;\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerTitleStyle: {\n        fontSize: 16\n      }\n    });\n  }, []);\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item.ingredientId);\n    var ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n  var renderIngredient = function renderIngredient(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressIngredient(item[0]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item[0].photo_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, item[0].name), React.createElement(Text, {\n      style: {\n        color: \"grey\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, item[1])));\n  };\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 3,\n    data: ingredientsArray,\n    renderItem: renderIngredient,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getIngredientName","getAllIngredients","IngredientsDetailsScreen","props","navigation","route","item","params","ingredients","ingredientsArray","setOptions","title","headerTitleStyle","fontSize","onPressIngredient","name","ingredientId","ingredient","navigate","renderIngredient","container","photo","uri","photo_url","color","recipeId"],"sources":["D:/ChamanLal08011/LogicSoft/PATH-FCI-Traceability/Sample_Monitoring_System/SampleMonitoringSystem/src/screens/IngredientsDetails/IngredientsDetailsScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\n\nexport default function IngredientsDetailsScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route.params?.ingredients;\n  const ingredientsArray = getAllIngredients(item);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.title,\n      headerTitleStyle: {\n        fontSize: 16,\n      },\n    });\n  }, []);\n\n  const onPressIngredient = (item) => {\n    let name = getIngredientName(item.ingredientId);\n    let ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", { ingredient, name });\n  };\n\n  const renderIngredient = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressIngredient(item[0])}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item[0].photo_url }} />\n        <Text style={styles.title}>{item[0].name}</Text>\n        <Text style={{ color: \"grey\" }}>{item[1]}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={3} data={ingredientsArray} renderItem={renderIngredient} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,eAAe,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAE/C,OAAOC,MAAM;AACb,SAASC,iBAAiB,EAAEC,iBAAiB;AAE7C,eAAe,SAASC,wBAAwB,CAACC,KAAK,EAAE;EAAA;IAAA;EAAA,IAC9CC,UAAU,GAAYD,KAAK,CAA3BC,UAAU;IAAEC,KAAK,GAAKF,KAAK,CAAfE,KAAK;EAEzB,IAAMC,IAAI,oBAAGD,KAAK,CAACE,MAAM,qBAAZ,cAAcC,WAAW;EACtC,IAAMC,gBAAgB,GAAGR,iBAAiB,CAACK,IAAI,CAAC;EAEhDR,eAAe,CAAC,YAAM;IAAA;IACpBM,UAAU,CAACM,UAAU,CAAC;MACpBC,KAAK,oBAAEN,KAAK,CAACE,MAAM,qBAAZ,eAAcI,KAAK;MAC1BC,gBAAgB,EAAE;QAChBC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIR,IAAI,EAAK;IAClC,IAAIS,IAAI,GAAGf,iBAAiB,CAACM,IAAI,CAACU,YAAY,CAAC;IAC/C,IAAIC,UAAU,GAAGX,IAAI,CAACU,YAAY;IAClCZ,UAAU,CAACc,QAAQ,CAAC,YAAY,EAAE;MAAED,UAAU,EAAVA,UAAU;MAAEF,IAAI,EAAJA;IAAK,CAAC,CAAC;EACzD,CAAC;EAED,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgB;IAAA,IAAMb,IAAI,QAAJA,IAAI;IAAA,OAC9B,oBAAC,kBAAkB;MAAC,aAAa,EAAC,qBAAqB;MAAC,OAAO,EAAE;QAAA,OAAMQ,iBAAiB,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChG,oBAAC,IAAI;MAAC,KAAK,EAAEP,MAAM,CAACqB,SAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5B,oBAAC,KAAK;MAAC,KAAK,EAAErB,MAAM,CAACsB,KAAM;MAAC,MAAM,EAAE;QAAEC,GAAG,EAAEhB,IAAI,CAAC,CAAC,CAAC,CAACiB;MAAU,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EAClE,oBAAC,IAAI;MAAC,KAAK,EAAExB,MAAM,CAACY,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEL,IAAI,CAAC,CAAC,CAAC,CAACS,IAAI,CAAQ,EAChD,oBAAC,IAAI;MAAC,KAAK,EAAE;QAAES,KAAK,EAAE;MAAO,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAElB,IAAI,CAAC,CAAC,CAAC,CAAQ,CAC3C,CACY;EAAA,CACtB;EAED,OACE,oBAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH,oBAAC,QAAQ;IAAC,QAAQ;IAAC,4BAA4B,EAAE,KAAM;IAAC,UAAU,EAAE,CAAE;IAAC,IAAI,EAAEG,gBAAiB;IAAC,UAAU,EAAEU,gBAAiB;IAAC,YAAY,EAAE,sBAACb,IAAI;MAAA,YAAQA,IAAI,CAACmB,QAAQ;IAAA,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtK;AAEX"},"metadata":{},"sourceType":"module"}